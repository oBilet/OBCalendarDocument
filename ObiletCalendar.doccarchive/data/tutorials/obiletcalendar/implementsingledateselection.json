{"identifier":{"url":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","interfaceLanguage":"swift"},"kind":"project","metadata":{"categoryPathComponent":"MeetObiletCalendar","category":"","title":"Implement Single Date Selection","role":"project"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/obiletcalendar\/implementsingledateselection"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Add-a-Base-view","kind":"task"},{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Explore-a-Base-View-Range"}]},{"sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Day-Modifier","kind":"task"},{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Include-Parameter"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Month-Modifier","kind":"task"},{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Modified-Day-+-Modified-Month"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar#OBBaseCalendar","kind":"task"}]}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Create-Demo-Project"},{"projects":[{"sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","kind":"task"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days","kind":"task"}]}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Improve-User-Interface"},{"projects":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Refactor-Code","kind":"task"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Date-Selection"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Special-Day-View","projects":[{"sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay#Implement-Your-Custom-Special-Day","kind":"task"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay"}]}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar","paths":[["doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar","doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/$volume","doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Date-Selection"]]},"sections":[{"title":"Implement Single Date Selection","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement single date selection for users can select specific date."}]}],"kind":"hero","chapter":"Implement Date Selection","estimatedTimeInMinutes":15},{"tasks":[{"stepsSection":[{"code":"c3-t1-s1-s1.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Look at latest state of previous chapter.","type":"text"}]}],"runtimePreview":"c3-t1-s1-s1.png","caption":[],"type":"step"},{"caption":[{"inlineContent":[{"type":"text","text":"Create helper "},{"type":"codeVoice","code":"modifyDayView"},{"text":" function that takes model as parameter.","type":"text"}],"type":"paragraph"}],"runtimePreview":"c3-t1-s1-s2.png","code":"c3-t1-s1-s2.swift","type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Create helper ","type":"text"},{"code":"contentBuilder","type":"codeVoice"},{"type":"text","text":" function."}]}]},{"runtimePreview":"c3-t1-s1-s3.png","caption":[],"code":"c3-t1-s1-s3.swift","content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"contentBuilder"},{"type":"text","text":" and "},{"code":"modifyDayView","type":"codeVoice"}],"type":"paragraph"}],"media":null,"type":"step"}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Refactor Code"}],"type":"paragraph"}]}],"title":"Refactor Code","anchor":"Refactor-Code"},{"title":"Implement Single Date","stepsSection":[{"type":"step","content":[{"inlineContent":[{"text":"Look at latest state of previous Section.","type":"text"}],"type":"paragraph"}],"caption":[],"media":null,"code":"c3-t1-s2-s1.swift","runtimePreview":"c3-t1-s2-s1.png"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this step, the "},{"code":"firstSelectedDate","type":"codeVoice"},{"type":"text","text":" property is added to keep track of the user’s selection."}]}],"runtimePreview":"c3-t1-s2-s2.png","code":"c3-t1-s2-s2.swift","type":"step","media":null,"caption":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"selectDate(of:)"},{"text":" function is implemented to handle date selection effectively.","type":"text"}],"type":"paragraph"}]},{"code":"c3-t1-s2-s3.swift","runtimePreview":"c3-t1-s2-s3.png","media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update "},{"type":"codeVoice","code":"ModifyDayView"},{"type":"text","text":" function to show user’s selection and add custom background."}]}],"caption":[]}],"anchor":"Implement-Single-Date","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Add feature that select single date.","type":"text"}]}],"mediaPosition":"trailing"}]}],"kind":"tasks"},{"action":{"overridingTitle":"Get started","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","isActive":true},"kind":"callToAction","featuredEyebrow":"Tutorial","abstract":[],"title":"Implement Double Date Selection"}],"references":{"c3-t1-s2-s1.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s2-s1.png"}],"alt":null,"identifier":"c3-t1-s2-s1.png"},"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateBaseView":{"type":"topic","estimatedTime":"5min","role":"project","abstract":[],"kind":"project","title":"Base View","url":"\/tutorials\/obiletcalendar\/createbaseview","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface#Add-Weekdays-View":{"abstract":[{"type":"text","text":"Improve the user interface by adding weekdays and a header view."}],"kind":"section","type":"section","title":"Add Weekdays View","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/improveuserinterface#Add-Weekdays-View","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Modified-Day-+-Modified-Month":{"abstract":[],"kind":"section","type":"section","title":"Modified Day + Modified Month","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/understandmodifiers#Modified-Day-+-Modified-Month","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Modified-Day-+-Modified-Month"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers":{"type":"topic","abstract":[],"estimatedTime":"2min","kind":"project","url":"\/tutorials\/obiletcalendar\/understandmodifiers","title":"Understand Modifiers","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers","role":"project"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Refactor-Code":{"url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Refactor-Code","role":"pseudoSymbol","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date."}],"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Refactor-Code","kind":"section","title":"Refactor Code","type":"section"},"doc://ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar":{"abstract":[{"type":"text","text":"Setup Empty Project"}],"url":"\/tutorials\/obiletcalendar\/setupemptyproject#Create-a-new-project-and-add-ObiletCalendar","title":"Create a new project and add ObiletCalendar","kind":"section","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface":{"url":"\/tutorials\/obiletcalendar\/improveuserinterface","role":"project","abstract":[{"type":"text","text":"Improve the user interface by adding weekdays and a header view."}],"estimatedTime":"10min","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","kind":"project","title":"Improve User Interface","type":"topic"},"c3-t1-s2-s3.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s2-s3.png"}],"alt":null,"identifier":"c3-t1-s2-s3.png"},"c3-t1-s2-s2.swift":{"type":"file","identifier":"c3-t1-s2-s2.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    @State var firstSelectedDate: Date?","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","                .onTapGesture {","                    selectDate(of: model.day)","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if dayDate < today {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    modifiedContent","                }","            }","        }","    }","    ","    func selectDate(of day: CalendarModel.Day) {","        let startOfToday = calendar.startOfDay(for: Date())","        let startOfDay = calendar.startOfDay(for: day.date)","        ","        if day.isInRangeCurrentMonth {","            if startOfDay >= startOfToday {","                firstSelectedDate = day.date","            }","        }","        ","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"highlights":[{"line":17},{"line":18},{"line":46},{"line":47},{"line":48},{"line":102},{"line":103},{"line":104},{"line":105},{"line":106},{"line":107},{"line":108},{"line":109},{"line":110},{"line":111},{"line":112},{"line":113}],"syntax":"swift","fileName":"OBCalendarDemo.swift","fileType":"swift"},"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateBaseView#Explore-a-Base-View-Range":{"abstract":[],"kind":"section","type":"section","title":"Explore a Base View Range","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/createbaseview#Explore-a-Base-View-Range","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Explore-a-Base-View-Range"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Implement-Special-Day-View":{"abstract":[],"kind":"article","type":"topic","title":"Implement Special Day View","role":"article","url":"\/tutorials\/meetobiletcalendar\/implement-special-day-view","identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Special-Day-View"},"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateBaseView#Add-a-Base-view":{"url":"\/tutorials\/obiletcalendar\/createbaseview#Add-a-Base-view","abstract":[],"type":"section","role":"pseudoSymbol","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Add-a-Base-view","kind":"section","title":"Add a Base view"},"c3-t1-s2-s1.swift":{"type":"file","identifier":"c3-t1-s2-s1.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if dayDate < today {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    modifiedContent","                }","            }","        }","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"highlights":[],"fileName":"OBCalendarDemo.swift","syntax":"swift","fileType":"swift"},"doc://ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject":{"url":"\/tutorials\/obiletcalendar\/setupemptyproject","role":"project","abstract":[{"type":"text","text":"Setup Empty Project"}],"estimatedTime":"3min","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","kind":"project","title":"Setup Empty Project","type":"topic"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Month-Modifier":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Month-Modifier","kind":"section","abstract":[],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/understandmodifiers#Month-Modifier","title":"Month Modifier"},"c3-t1-s2-s2.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s2-s2.png"}],"alt":null,"type":"image","identifier":"c3-t1-s2-s2.png"},"doc://ObiletCalendar/tutorials/ObiletCalendar/BaseCalendar":{"abstract":[{"text":"You can more manage your calendar using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBBaseCalendar"},{"text":".If you previous steps are enough for you, you can skip this section.","type":"text"}],"kind":"project","type":"topic","estimatedTime":"10min","title":"Understand BaseCalendar","role":"project","url":"\/tutorials\/obiletcalendar\/basecalendar","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar"},"c3-t1-s1-s2.png":{"alt":null,"type":"image","identifier":"c3-t1-s1-s2.png","variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s1-s2.png"}]},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Day-Modifier":{"abstract":[],"url":"\/tutorials\/obiletcalendar\/understandmodifiers#Day-Modifier","title":"Day Modifier","kind":"section","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Day-Modifier"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Implement-Single-Date":{"url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Implement-Single-Date","type":"section","role":"pseudoSymbol","title":"Implement Single Date","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date","kind":"section","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date."}]},"c3-t1-s1-s3.swift":{"identifier":"c3-t1-s1-s3.swift","fileType":"swift","fileName":"OBCalendarDemo.swift","type":"file","syntax":"swift","highlights":[{"line":41},{"line":42},{"line":82},{"line":83},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94}],"content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if dayDate < today {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    modifiedContent","                }","            }","        }","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""]},"doc://ObiletCalendar/documentation/ObiletCalendar/OBBaseCalendar":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBBaseCalendar","title":"OBBaseCalendar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OBBaseCalendar"}],"navigatorTitle":[{"text":"OBBaseCalendar","kind":"identifier"}],"url":"\/documentation\/obiletcalendar\/obbasecalendar","abstract":[]},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementYourCustomSpecialDay#Implement-Your-Custom-Special-Day":{"type":"section","abstract":[],"kind":"section","url":"\/tutorials\/obiletcalendar\/implementyourcustomspecialday#Implement-Your-Custom-Special-Day","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay#Implement-Your-Custom-Special-Day","title":"Implement Your Custom Special Day","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementYourCustomSpecialDay":{"type":"topic","estimatedTime":"7min","role":"project","abstract":[],"kind":"project","title":"Implement Special Day","url":"\/tutorials\/obiletcalendar\/implementyourcustomspecialday","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection#Implement-Double-Date-Selection":{"url":"\/tutorials\/obiletcalendar\/implementdoubledateselection#Implement-Double-Date-Selection","role":"pseudoSymbol","abstract":[],"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","kind":"section","title":"Implement Double Date Selection","type":"section"},"c3-t1-s2-s3.swift":{"fileType":"swift","identifier":"c3-t1-s2-s3.swift","type":"file","highlights":[{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":102},{"line":106},{"line":107},{"line":108},{"line":109},{"line":110},{"line":111},{"line":112},{"line":113},{"line":115},{"line":116}],"syntax":"swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    var selectedOBBackgroundColor: some View = Circle()","        .foregroundColor(","            Self.makeColor(","                red: 47,","                green: 91,","                blue: 141","            )","        )","    ","    @State var firstSelectedDate: Date?","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","                .onTapGesture {","                    selectDate(of: model.day)","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if (dayDate < today) {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    if firstSelectedDate == model.date {","                        modifiedContent","                            .foregroundColor(.white)","                            .background(selectedOBBackgroundColor)","                    }else {","                        modifiedContent","                            .foregroundColor(.black)","                    }","                }","            }else {","                Color.clear","            }","        }","    }","    ","    func selectDate(of day: CalendarModel.Day) {","        let startOfToday = calendar.startOfDay(for: Date())","        let startOfDay = calendar.startOfDay(for: day.date)","        ","        if day.isInRangeCurrentMonth {","            if startOfDay >= startOfToday {","                firstSelectedDate = day.date","            }","        }","        ","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"fileName":"OBCalendarDemo.swift"},"c3-t1-s1-s3.png":{"alt":null,"type":"image","identifier":"c3-t1-s1-s3.png","variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s1-s3.png"}]},"doc://ObiletCalendar/tutorials/MeetObiletCalendar":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar","abstract":[{"text":"Create easily your custom calendar","type":"text"}],"type":"topic","kind":"overview","title":"Meet ObiletCalendar","role":"overview","url":"\/tutorials\/meetobiletcalendar"},"doc://ObiletCalendar/tutorials/ObiletCalendar/BaseCalendar#OBBaseCalendar":{"kind":"section","role":"pseudoSymbol","type":"section","title":"OBBaseCalendar","url":"\/tutorials\/obiletcalendar\/basecalendar#OBBaseCalendar","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar#OBBaseCalendar","abstract":[{"type":"text","text":"You can more manage your calendar using "},{"type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBBaseCalendar","isActive":true},{"text":".If you previous steps are enough for you, you can skip this section.","type":"text"}]},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Include-Parameter":{"url":"\/tutorials\/obiletcalendar\/understandmodifiers#Include-Parameter","kind":"section","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Include-Parameter","type":"section","title":"Include Parameter","abstract":[],"role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection":{"url":"\/tutorials\/obiletcalendar\/implementdoubledateselection","role":"project","abstract":[],"estimatedTime":"10min","kind":"project","type":"topic","title":"Implement Double Date Selection","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Improve-User-Interface":{"url":"\/tutorials\/meetobiletcalendar\/improve-user-interface","role":"article","abstract":[],"type":"topic","kind":"article","title":"Improve User Interface","identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Improve-User-Interface"},"c3-t1-s1-s2.swift":{"highlights":[{"line":29},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93}],"syntax":"swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                let day = model.day","                let today = calendar.startOfDay(for: Date())","                let dayDate = calendar.startOfDay(for: day.date)","                ","                if day.isInRangeCurrentMonth {","                    if dayDate < today {","                        baseView","                            .foregroundColor(.gray)","                    }else {","                        baseView","                    }","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            \/\/ some logic goes here","        }","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"fileName":"OBCalendarDemo.swift","type":"file","identifier":"c3-t1-s1-s2.swift","fileType":"swift"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView":{"abstract":[],"kind":"project","type":"topic","estimatedTime":"1min","title":"Change Day View","role":"project","url":"\/tutorials\/obiletcalendar\/changedayview","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Implement-Date-Selection":{"abstract":[],"url":"\/tutorials\/meetobiletcalendar\/implement-date-selection","kind":"article","title":"Implement Date Selection","role":"article","type":"topic","identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Date-Selection"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Create-Demo-Project":{"kind":"article","url":"\/tutorials\/meetobiletcalendar\/create-demo-project","abstract":[],"identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Create-Demo-Project","title":"Create Demo Project","role":"article","type":"topic"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView#Hide-Some-Days":{"url":"\/tutorials\/obiletcalendar\/changedayview#Hide-Some-Days","role":"pseudoSymbol","abstract":[],"kind":"section","type":"section","title":"Hide Some Days","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days"},"c3-t1-s1-s1.swift":{"highlights":[],"syntax":"swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                let day = model.day","                let today = calendar.startOfDay(for: Date())","                let dayDate = calendar.startOfDay(for: day.date)","                ","                if day.isInRangeCurrentMonth {","                    if dayDate < today {","                        baseView","                            .foregroundColor(.gray)","                    }else {","                        baseView","                    }","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"fileName":"OBCalendarDemo.swift","type":"file","identifier":"c3-t1-s1-s1.swift","fileType":"swift"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection":{"url":"\/tutorials\/obiletcalendar\/implementsingledateselection","role":"project","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date."}],"estimatedTime":"15min","kind":"project","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","title":"Implement Single Date Selection","type":"topic"},"c3-t1-s1-s1.png":{"identifier":"c3-t1-s1-s1.png","alt":null,"type":"image","variants":[{"url":"\/images\/c3-t1-s1-s1.png","traits":["1x","light"]}]}}}