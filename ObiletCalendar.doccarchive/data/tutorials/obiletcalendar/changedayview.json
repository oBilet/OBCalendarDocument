{"variants":[{"paths":["\/tutorials\/obiletcalendar\/changedayview"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","modules":[{"projects":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","kind":"task"}]},{"sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view","kind":"task"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project"},{"projects":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","kind":"task"}]},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days"}]}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface"},{"projects":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection"}]},{"sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#Refactor","kind":"task"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection"},{"sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection"},{"projects":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay","sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day"}]}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View"}],"paths":[["doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/$volume","doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface"]]},"metadata":{"category":"Tutorial","title":"Change Day View ","role":"project","categoryPathComponent":"ObiletCalendar"},"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change view of "},{"code":"day","type":"codeVoice"},{"type":"text","text":" by "},{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Date Type"}],"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitle":"Date Type"},{"text":" and ","type":"text"},{"type":"reference","overridingTitleInlineContent":[{"text":"Range Type","type":"text"}],"overridingTitle":"Range Type","isActive":true,"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum"}]}],"chapter":"Improve User Interface","title":"Change Day View ","kind":"hero","estimatedTimeInMinutes":3},{"tasks":[{"title":"Hide Some Days","anchor":"Hide-Some-Days","stepsSection":[{"media":null,"code":"c2-t2-s1-step1.swift","runtimePreview":"c2-t2-s1-step1.png","type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Look at latest state of previous tutorial.","type":"text"}]}]},{"media":null,"code":"c2-t2-s1-step2.swift","runtimePreview":"c2-t2-s1-step2.png","content":[{"inlineContent":[{"text":"If day is in ","type":"text"},{"overridingTitleInlineContent":[{"type":"text","text":"insideRange"}],"isActive":true,"overridingTitle":"insideRange","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum\/insideRange(_:)","type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitleInlineContent":[{"text":"dateType","type":"text"}],"isActive":true,"overridingTitle":"dateType"},{"type":"text","text":" of "},{"type":"codeVoice","code":"day"},{"text":" is ","type":"text"},{"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType\/currentMonth","isActive":true,"overridingTitleInlineContent":[{"text":"currentMonth","type":"text"}],"overridingTitle":"currentMonth"},{"type":"text","text":", show view of "},{"type":"codeVoice","code":"day"},{"type":"text","text":" otherwise dont show."}],"type":"paragraph"}],"type":"step","caption":[]},{"type":"step","runtimePreview":"c2-t2-s1-step3.png","caption":[],"content":[{"inlineContent":[{"type":"text","text":"If day is in "},{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum\/insideRange(_:)","overridingTitleInlineContent":[{"text":"insideRange","type":"text"}],"overridingTitle":"insideRange","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitleInlineContent":[{"type":"text","text":"dateType"}],"isActive":true,"overridingTitle":"dateType"},{"text":" of ","type":"text"},{"code":"day","type":"codeVoice"},{"text":" is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType\/currentMonth","overridingTitleInlineContent":[{"type":"text","text":"currentMonth"}],"overridingTitle":"currentMonth","type":"reference"},{"type":"text","text":" and date of "},{"type":"codeVoice","code":"day"},{"type":"text","text":" less than today  , change foregroundColor as gray otherwise show dayâ€™s foreground as black."}],"type":"paragraph"}],"media":null,"code":"c2-t2-s1-step3.swift"}],"contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Hide day of previous and next month."}]}],"kind":"contentAndMedia"}]}],"kind":"tasks"},{"abstract":[{"text":"Implement single date selection for users can select specific date.","type":"text"}],"title":"Implement Single Date Selection","action":{"type":"reference","overridingTitle":"Get started","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"kind":"callToAction","featuredEyebrow":"Tutorial"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar":{"role":"overview","kind":"overview","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","title":"Meet ObiletCalendar","url":"\/tutorials\/obiletcalendar","abstract":[{"text":"Create easily your custom calendar","type":"text"}],"type":"topic"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Implement-Date-Selection":{"role":"article","kind":"article","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection","title":"Implement Date Selection","url":"\/tutorials\/obiletcalendar\/implement-date-selection","abstract":[],"type":"topic"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection#Refactor":{"type":"section","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection#Refactor","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#Refactor","title":"Refactor","abstract":[{"type":"text","text":"In future , will shown double selection so refactor this code."}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Create-Demo-Project":{"title":"Create Demo Project","kind":"article","role":"article","url":"\/tutorials\/obiletcalendar\/create-demo-project","type":"topic","abstract":[],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface":{"url":"\/tutorials\/obiletcalendar\/improveuserinterface","estimatedTime":"5min","title":"Improve User Interface","role":"project","type":"topic","abstract":[{"text":"Improve the user interface by adding weekdays and a header view.","type":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","kind":"project"},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/DateType":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","role":"symbol","url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/datetype","navigatorTitle":[{"kind":"identifier","text":"DateType"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DateType","kind":"identifier"}],"type":"topic","title":"CalendarModel.Day.DateType","abstract":[],"kind":"symbol"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView":{"title":"Create Skeleton View","url":"\/tutorials\/obiletcalendar\/createskeletonview","kind":"project","abstract":[],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView","estimatedTime":"5min","role":"project","type":"topic"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Implement-Special-Day-View":{"url":"\/tutorials\/obiletcalendar\/implement-special-day-view","type":"topic","role":"article","abstract":[],"kind":"article","title":"Implement Special Day View","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View"},"c2-t2-s1-step3.png":{"variants":[{"url":"\/images\/obcalendar.ObiletCalendar\/c2-t2-s1-step3.png","traits":["1x","light"]}],"identifier":"c2-t2-s1-step3.png","alt":"desc","type":"image"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Improve-User-Interface":{"role":"article","kind":"article","abstract":[],"url":"\/tutorials\/obiletcalendar\/improve-user-interface","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface","type":"topic","title":"Improve User Interface"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection":{"role":"project","title":"Refactor Implement Single Date Selection","estimatedTime":"10min","url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection","abstract":[{"text":"In future , will shown double selection so refactor this code.","type":"text"}],"kind":"project","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection","type":"topic"},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/RangeType-swift.enum":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RangeType"}],"url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/rangetype-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeType"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","type":"topic","abstract":[],"title":"CalendarModel.Day.RangeType","kind":"symbol"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView#Add-a-customization-view":{"url":"\/tutorials\/obiletcalendar\/createskeletonview#Add-a-customization-view","title":"Add a customization view","role":"pseudoSymbol","type":"section","abstract":[],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view","kind":"section"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection":{"role":"project","kind":"project","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","title":"Implement Single Date Selection","url":"\/tutorials\/obiletcalendar\/implementsingledateselection","abstract":[{"text":"Implement single date selection for users can select specific date.","type":"text"}],"estimatedTime":"10min","type":"topic"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Implement-Single-Date-Selection":{"role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date."}],"url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Implement-Single-Date-Selection","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection","type":"section","title":"Implement Single Date Selection"},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/DateType/currentMonth":{"abstract":[],"kind":"symbol","type":"topic","title":"CalendarModel.Day.DateType.currentMonth","role":"symbol","url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/datetype\/currentmonth","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType\/currentMonth","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"currentMonth"}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface#Add-Weekdays-View":{"title":"Add Weekdays View","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","url":"\/tutorials\/obiletcalendar\/improveuserinterface#Add-Weekdays-View","type":"section","role":"pseudoSymbol","kind":"section","abstract":[{"text":"Improve the user interface by adding weekdays and a header view.","type":"text"}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","abstract":[{"text":"Change view of ","type":"text"},{"type":"codeVoice","code":"day"},{"text":" by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitle":"Date Type","overridingTitleInlineContent":[{"type":"text","text":"Date Type"}]},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","type":"reference","overridingTitle":"Range Type","overridingTitleInlineContent":[{"text":"Range Type","type":"text"}]}],"kind":"project","url":"\/tutorials\/obiletcalendar\/changedayview","role":"project","estimatedTime":"3min","title":"Change Day View ","type":"topic"},"c2-t2-s1-step1.png":{"variants":[{"url":"\/images\/obcalendar.ObiletCalendar\/c2-t2-s1-step1.png","traits":["1x","light"]}],"identifier":"c2-t2-s1-step1.png","alt":"desc","type":"image"},"c2-t2-s1-step2.png":{"variants":[{"url":"\/images\/obcalendar.ObiletCalendar\/c2-t2-s1-step2.png","traits":["1x","light"]}],"identifier":"c2-t2-s1-step2.png","alt":"desc","type":"image"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay#Implement-Your-Custom-Special-Day":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day","title":"Implement Your Custom Special Day","url":"\/tutorials\/obiletcalendar\/implementspecialday#Implement-Your-Custom-Special-Day","abstract":[{"type":"text","text":"Implement special day."}],"type":"section"},"c2-t2-s1-step2.swift":{"highlights":[{"line":50},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":143}],"syntax":"swift","fileName":"OBCalendarDemo.swift","type":"file","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","                .background(Color.red)","                .foregroundColor(.white)","            ","            daysView","                .padding(8)","                .background(Color.white)","                .compositingGroup()","                .shadow(color: .gray, radius: 1, x: 0, y: 2)","            calendarView","                .padding(4)","        }","        ","    }","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.white)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","        ","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","        ","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            let day = model.day","            ZStack {","                if case .insideRange(.currentMonth) = day.rangeType {","                    Text(\"\\(day.day)\")","                }","            }","            .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","    ","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"],"identifier":"c2-t2-s1-step2.swift","fileType":"swift"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection#Implement-Double-Date-Selection":{"title":"Implement Double Date Selection","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","abstract":[{"type":"text","text":"Some Text"}],"type":"section","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection#Implement-Double-Date-Selection"},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/RangeType-swift.enum/insideRange(_:)":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"insideRange"},{"kind":"text","text":"("},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO3DayV8DateTypeO","text":"DateType","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum\/insideRange(_:)","url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/rangetype-swift.enum\/insiderange(_:)","title":"CalendarModel.Day.RangeType.insideRange(_:)"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","abstract":[],"type":"section","kind":"section","title":"Create a new project and add ObiletCalendar","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/setupemptyproject#Create-a-new-project-and-add-ObiletCalendar"},"c2-t2-s1-step3.swift":{"content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","                .background(Color.red)","                .foregroundColor(.white)","            ","            daysView","                .padding(8)","                .background(Color.white)","                .compositingGroup()","                .shadow(color: .gray, radius: 1, x: 0, y: 2)","            calendarView","                .padding(4)","        }","        ","    }","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.white)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","        ","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","        ","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: day.date)","            ZStack {","                if case .insideRange(.currentMonth) = day.rangeType {","                    if (dayDate < today) {","                        Text(\"\\(day.day)\")","                            .foregroundColor(.gray)","                    }else {","                        Text(\"\\(day.day)\")","                    }","                }","            }","            .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","    ","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"],"highlights":[{"line":68},{"line":69},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77}],"fileName":"OBCalendarDemo.swift","fileType":"swift","type":"file","syntax":"swift","identifier":"c2-t2-s1-step3.swift"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView#Hide-Some-Days":{"url":"\/tutorials\/obiletcalendar\/changedayview#Hide-Some-Days","title":"Hide Some Days","role":"pseudoSymbol","type":"section","abstract":[{"text":"Change view of ","type":"text"},{"type":"codeVoice","code":"day"},{"type":"text","text":" by "},{"isActive":true,"overridingTitle":"Date Type","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","type":"reference","overridingTitleInlineContent":[{"text":"Date Type","type":"text"}]},{"type":"text","text":" and "},{"type":"reference","isActive":true,"overridingTitle":"Range Type","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","overridingTitleInlineContent":[{"type":"text","text":"Range Type"}]}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days","kind":"section"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject":{"title":"Setup Empty Project","estimatedTime":"3min","role":"project","kind":"project","url":"\/tutorials\/obiletcalendar\/setupemptyproject","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","type":"topic","abstract":[]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","abstract":[{"text":"Some Text","type":"text"}],"type":"topic","kind":"project","title":"Implement Double Date Selection","role":"project","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection","estimatedTime":"10min"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay":{"url":"\/tutorials\/obiletcalendar\/implementspecialday","estimatedTime":"7min","title":"Implement Special Day ","role":"project","type":"topic","abstract":[{"text":"Implement special day.","type":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay","kind":"project"},"c2-t2-s1-step1.swift":{"highlights":[],"syntax":"swift","fileName":"OBCalendarDemo.swift","type":"file","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","                .background(Color.red)","                .foregroundColor(.white)","            ","            daysView","                .padding(8)","                .background(Color.white)","                .compositingGroup()","                .shadow(color: .gray, radius: 1, x: 0, y: 2)","            calendarView","                .padding(4)","        }","        ","    }","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.white)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","                ","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","        ","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","    ","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"],"identifier":"c2-t2-s1-step1.swift","fileType":"swift"}}}